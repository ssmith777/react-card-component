{"version":3,"sources":["components/Card/index.js","components/Card/CardGen.js","App.js","serviceWorker.js","index.js"],"names":["StyledContainer","styled","div","_templateObject","props","concat","theme","border","primary","gradient","secondary","Title","h2","_templateObject2","Date","_templateObject3","Description","p","_templateObject4","Actions","_templateObject5","Action","button","_templateObject6","main","StyledPhoto","img","_templateObject7","Card","_ref","title","date","description","actions","comments","likes","views","image","react_default","a","createElement","src","Card_Date","map","_ref2","id","label","key","StyledRoot","CardGen_templateObject","CardGen_templateObject2","CardGen","toLocaleDateString","buttons","Fragment","index_esm","onClick","alert","CardGen_StyledContainer","components_Card","desc","App","className","styled_components_browser_esm","Card_CardGen","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.82e6e202.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledContainer = styled.div`\n  border: ${props => `1px solid ${props.theme.border}`};\n  padding: 25px 12px 18px;\n  background: ${props => `linear-gradient(\n    45deg,${props.theme.primary.gradient}, ${props.theme.secondary.gradient}\n  )`};\n`;\nconst Title = styled.h2`\n  color: #fff;\n  font-weight: 300;\n  @media (max-width: 500px) {\n    font-size: 1rem;\n  }\n`;\nconst Date = styled.div`\n  color: #ccc;\n  font-weight: 300;\n  margin: 6px 0;\n  @media (max-width: 500px) {\n    font-size: 0.8rem;\n  }\n`;\nconst Description = styled.p`\n  color: #fff;\n  font-weight: 300;\n  @media (max-width: 500px) {\n    font-size: 0.75rem;\n  }\n`;\nconst Actions = styled.div`\n  color: #333;\n  display: flex;\n  align-items: center;\n  svg {\n    transform: translateY(2px);\n    margin-right: 5px;\n  }\n  @media (max-width: 500px) {\n    flex-direction: column;\n    & button {\n      width: 100%;\n      margin-bottom: 4px;\n      font-size: 0.65rem;\n    }\n  }\n`;\nconst Action = styled.button`\n  margin: 0 5px;\n  padding: 8px 14px;\n  background: rgba(155, 155, 155, 0.2);\n  color: #fff;\n  cursor: pointer;\n  border: 1px solid #fff;\n  outline: 0;\n  font-weight: 300;\n  :hover {\n    opacity: 0.8;\n  }\n  :active {\n    background: ${props => props.theme.primary.main};\n  }\n`;\n\nconst StyledPhoto = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border: ${props => `1px solid ${props.theme.border}`};\n`;\n\nconst Card = ({\n  title,\n  date,\n  description,\n  comments,\n  likes,\n  views,\n  actions,\n  image\n}) => (\n  <StyledContainer>\n    <StyledPhoto src={image} />\n    <Title>{title}</Title>\n    <Date>{date}</Date>\n    <Description>{description}</Description>\n    <Actions>\n      {actions.map(({ id, label }) => (\n        <Action key={id}>{label}</Action>\n      ))}\n    </Actions>\n  </StyledContainer>\n);\nexport default Card;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { FaCommentAlt, FaThumbsUp, FaRegEye } from \"react-icons/fa\";\nimport Card from \"../Card\";\n\nconst StyledRoot = styled.div`\n  padding: 50px 12px;\n`;\nconst StyledContainer = styled.div`\n  max-width: 550px;\n  width: 100%;\n  margin: auto;\n`;\nconst CardGen = props => {\n  const date = new Date().toLocaleDateString();\n  const onCommentClick = () => alert(\"You clicked comments\");\n  const onLikesClick = () => alert(\"You clicked comments\");\n  const onViewsClick = () => alert(\"You clicked comments\");\n  const buttons = [\n    {\n      id: 1,\n      label: (\n        <>\n          <FaCommentAlt /> 0 Comments\n        </>\n      ),\n      onClick: onCommentClick\n    },\n    {\n      id: 2,\n      label: (\n        <>\n          <FaThumbsUp /> 242 Likes\n        </>\n      ),\n      onClick: onLikesClick\n    },\n    {\n      id: 3,\n      label: (\n        <>\n          <FaRegEye /> 187288 Views\n        </>\n      ),\n      onClick: onViewsClick\n    }\n  ];\n  return (\n    <StyledRoot>\n      <StyledContainer>\n        <Card\n          image={props.image}\n          title={props.title}\n          date={date}\n          description={props.desc}\n          actions={buttons}\n        />\n      </StyledContainer>\n    </StyledRoot>\n  );\n};\nexport default CardGen;\n","import React from \"react\";\nimport CardGen from \"./components/Card/CardGen\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  border: \"white\",\n  primary: {\n    gradient: \"green\"\n  },\n  secondary: {\n    gradient: \"blue\"\n  }\n};\n\nconst title = \"Lorem ipsum dolor sit amet consectetur\";\nconst desc =\n  \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Beatae esse sed voluptas minima optio amet recusandae, earum necessitatibus perferendis soluta a aut pariatur rerum quia ab inventore et! Est ratione impedit ducimus, expedita veniam rem tempore cupiditate placeat doloribus suscipit accusamus! Perferendis reprehenderit dolorem ea doloribus est facilis molestias exercitationem.\";\nconst img =\n  \"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <CardGen title={title} desc={desc} image={img} />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}